services:
  # --------------------------------------------------------------------------
  # CONTENT SERVICE
  # --------------------------------------------------------------------------
  content_service:
    build: ./services/content_service
    container_name: content_service
    ports:
      - "8000:8000"
    env_file:
      - ./services/content_service/.env
    depends_on:
      - content_postgres
      - keycloak
    networks:
      - backend

  content_postgres:
    image: postgres:13
    container_name: content_postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: content_db
    volumes:
      - content_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend

  # --------------------------------------------------------------------------
  # TESTER SERVICE
  # --------------------------------------------------------------------------
  tester_service:
    build: ./services/tester_service
    container_name: tester_service
    ports:
      - "8001:8001"
    env_file:
      - ./services/tester_service/.env
    volumes:
      - shared_tmp:/shared_tmp
    depends_on:
      - tester_postgres
      - keycloak
      - dind
    networks:
      - backend

  tester_postgres:
    image: postgres:13
    container_name: tester_postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tester_db
    volumes:
      - tester_data:/var/lib/postgresql/data
    ports:
      - "5433:5433"
    networks:
      - backend

  # --------------------------------------------------------------------------
  # KEYCLOAK
  # --------------------------------------------------------------------------
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      DB_VENDOR: H2
    ports:
      - "8080:8080"
    command: start-dev
    volumes:
      - keycloak_data:/opt/keycloak/data
    networks:
      - backend

  # --------------------------------------------------------------------------
  # DOCKER-IN-DOCKER
  # --------------------------------------------------------------------------
  dind:
    image: docker:dind
    container_name: dind
    privileged: true
    environment:
      DOCKER_TLS_CERTDIR: ""   # отключаем TLS
    command: ["dockerd-entrypoint.sh", "--host=tcp://0.0.0.0:2375"]
    ports:
      - "2375:2375"
    volumes:
      - dind_storage:/var/lib/docker
      - shared_tmp:/shared_tmp    # добавляем этот volume!
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2375/version"]
      interval: 5s
      timeout: 2s
      retries: 10
    networks:
      - backend

  # --------------------------------------------------------------------------
  # KRAKEND GATEWAY
  # --------------------------------------------------------------------------
  krakend:
    image: devopsfaith/krakend:watch
    container_name: krakend
    ports:
      - "8081:8081"
    volumes:
      - ./services/krakend/krakend.json:/etc/krakend/krakend.json
    depends_on:
      - content_service
      - tester_service
    networks:
      - backend
    command: [ "run", "-dc", "/etc/krakend/krakend.json" ]

  # --------------------------------------------------------------------------
  # FRONTEND
  # --------------------------------------------------------------------------
  frontend:
    build: ./services/frontend
    container_name: frontend
    ports:
      - "3000:80"
    environment:
      GATEWAY_URL: http://krakend:8081
    networks:
      - backend
  # --------------------------------------------------------------------------
volumes:
  content_data:
  tester_data:
  dind_storage:
  shared_tmp:
  keycloak_data:

networks:
  backend:
    driver: bridge
